<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <!--Fonts-->
    {% include "_partials/fonts.liquid" %}

    <!--Main data-->
    <title>{{ title }}</title>
    <meta name="description" content="{{ desc }}" />
    <meta name="author" content="{{ site.author.name }}" />

    <!--Favicons-->
    {% include "_partials/favicons.liquid" %}

    <!--Opengraph-->
    <meta property="og:title" content="{{ data.title }}" />
    <meta property="og:url" content="{{ page.url }}" />
    {% if tags %}
    <meta
      property="og:image"
      content="{{ site.url }}/assets/img/og/{{
        data.title | slug
      }}-preview.jpeg"
    />
    <meta
      property="og:image:secure_url"
      content="{{ site.url }}/assets/img/og/{{
        data.title | slug
      }}-preview.jpeg"
    />
    {% else %}
    <meta
      property="og:image"
      content="{{ site.url }}/img/default-preview.jpeg"
    />
    <meta
      property="og:image:secure_url"
      content="{{ site.url }}/img/default-preview.jpeg"
    />
    {% endif %}
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="{{ site.twitter - s }}" />
    <meta name="twitter:creator" content="{{ site.twitter - s }}" />
    <link rel="me" href="{{ site.mastodon }}" />

    <!--Schema Org-->
    <meta name="description" content="{{ desc }}" />
    <meta name="application-name" content="{{ site.title }}" />
    <meta name="generator" content="11ty" />
    <link href="{{ site.url }}{{ page.url | url }}" rel="canonical" />

    <!--Others-->
    <link href="/manifest.json" rel="manifest" />
    <link href="/humans.txt" rel="author" />
    <link href="/sitemap.xml" rel="sitemap" type="application/xml" />

    <!-- Feeds -->
    <link
      rel="alternate"
      href="{{ site.url }}/feed/feed.xml"
      type="application/rss+xml"
      title="RSS"
    />
    <link
      rel="alternate"
      href="{{ site.url }}/feed/atom.xml"
      type="application/atom+xml"
      title="Atom 0.3"
    />

    <!--styles-->
    <link
      href="https://unpkg.com/prismjs@1.20.0/themes/prism-okaidia.css"
      rel="stylesheet"
    />
    <link href="/assets/styles/tailwind.css" rel="stylesheet" />

    <!--Scripts-->
  </head>

  <body
    class="bg-stone-50 text-stone-950 dark:bg-stone-900 dark:text-stone-100"
  >
    <main
      class="px-5 sm:max-w-2xl sm:px-8 lg:px-0 antialiased md:max-w-full grid gap-12 mt-4 overflow-hidden md:overflow-visible"
    >
    {% include "_partials/nav.liquid" %}

      {{ content }}
      {% include "_partials/footer.liquid" %}
    </main>

    <script>
      const isDarkMode = () => {
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)"
        ).matches;
        const storedTheme = localStorage.getItem("theme");

        // Если в локальном хранилище уже есть значение, используйте его
        if (storedTheme) {
          return storedTheme === "dark";
        }

        // Иначе используйте prefers-color-scheme
        return prefersDark;
      };

      const toggleTheme = () => {
        const isDark = isDarkMode();
        document.documentElement.classList.toggle("dark", isDark);
        localStorage.theme = isDark ? "light" : "dark";
      };

      // Установите начальную тему
      toggleTheme();

      // Сохранение состояния для theme в localStorage
      window.addEventListener("beforeunload", () => {
        localStorage.theme = document.documentElement.classList.contains("dark")
          ? "dark"
          : "light";
      });

      // Добавьте обработчик события click к кнопке переключения темы
      const button = document.getElementById("toggle-theme");
      button.addEventListener("click", toggleTheme);
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const drawer = document.getElementById("header-drawer");
        const button = document.getElementById("header-drawer-button");

        const toggleDrawer = () => {
          drawer.classList.toggle("translate-x-96");
        };

        button.addEventListener("click", toggleDrawer);

        // Сохранение состояния для drawer в localStorage
        document
          .getElementById("header-drawer")
          .addEventListener("transitionend", () => {
            localStorage.drawerCollapsed = document
              .getElementById("header-drawer")
              .classList.contains("translate-x-96");
          });
      });
    </script>

    <script src="/assets/scripts/jquery.min.js"></script>
    <script src="/assets/scripts/fotorama.min.js"></script>
  </body>
</html>
